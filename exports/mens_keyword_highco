[["15th European Conference on Software Maintenance and Reengineering  CSMR 2011  1-4 March 2011  Oldenburg  Germany","QUALGEN: Modeling and Analysing the Quality of Evolving Software Systems.","Averting the Next Software Crisis.","Guiding Architectural Restructuring through Architectural Styles.","A framework for analysing and visualising open source software ecosystems.","Evolving Software Architecture Descriptions of Critical Systems.","A case study to evaluate the suitability of graph transformation tools for program refactoring.","Amélioration de la qualité de modèles. Une étude de deux approches complémentaires.","CSMR 2009 European Projects Track.","What Does It Take to Develop a Million Lines of Open Source Code?.","Detecting model inconsistency through operation-based model construction.","Ontology Evolution.","Evolution Issues in Aspect-Oriented Programming.","Specifying Domain-Specific Refactorings for AndroMDA Based on Graph Transformation.","Using Graph Transformation to Support Collaborative Ontology Evolution.","Generation of Sierpinski Triangles: A Case Study for Graph Transformation Tools.","Preface of the Proceedings of the Third International ERCIM Symposium on Software Evolution - EVOL 2007.","Refactoring of UML models using AGG.","A formal approach to model refactoring and model refinement.","Analysing refactoring dependencies using graph transformation.","Evolution dArchitectures à base de Composants par Transformation de Graphes.","Does God Class Decomposition Affect Comprehensibility?","Transformation dependency analysis - a comparison of two approaches.","Incremental Resolution of Model Inconsistencies.","A Taxonomy of Model Transformation.","Applying a Model Transformation Taxonomy to Graph Transformation Technology.","On the Use of Graph Transformations for Model Refactoring.","The LAN-simulation: A Refactoring Teaching Example.","Essentials of the 4th UML/MoDELS Workshop in Software Model Engineering (WiSME2005).","Detecting Structural Refactoring Conflicts Using Critical Pair Analysis.","On the Evolution Complexity of Design Patterns.","Formalizing refactorings with graph transformations.","Workshop on Software Evolution Through Transformations: Model-Based vs. Implementation-Level Solutions.","04101 Discussion - A Taxonomy of Model Transformations.","Language-independent detection of object-oriented design patterns.","Analyzing the Evolution of Large-Scale Software.","Detecting Inconsistencies between UML Models Using Description Logic.","High-Speed Migration by Anticipative Mobility.","Using Genetic Programming to Generate Protocol Adaptors for Interprocess Communication.","Beyond the Refactoring Browser: Advanced Tool Support for Software Refactoring.","Reducing Network Latency by Application Streaming.","Using Description Logic to Maintain Consistency between UML Models.","Declarative Meta Programming to Support Software Development: Workshop Report.","Software Evolution through Transformations.","Case Study: Simulation of a LAN.","Refactoring: Current Research and Future Trends.","Unanticipated Software Evolution.","Fine-Grained Interlaced Code Loading for Mobile Systems.","Analysing Object-Oriented Application Frameworks Using Concept Analysis.","Maintaining software through intentional source-code views.","Graph-Based Tools (GraBaTs 2002).","A Graph-Based Metamodel for Object-Oriented Software Metrics.","A State-of-the-Art Survey on Software Merging.","Separation of concerns for software evolution.","4th Workshop on Object-Oriented Architectural Evolution.","A Formal Foundation for Object-Oriented Software Evolution.","A Declarative Evolution Framework for Object-Oriented Design Patterns.","Automating Support for Software Evolution in UML.","Conditional Graph Rewriting as a Domain-Independent Formalism for Software Evolution.","Is It Possible to Express a Semantics of UML in UML? (The Meta-modelling Approach).","Assessing the Evolvability of Software Architectures.","Supporting Disciplined Reuse and Evolution of UML Models.","Combining Software Descriptions.","Abstract Semantics for ESM Systems.","OPUS: A Calculus for Modelling Object-Oriented Concepts.","PALTA: Peer-to-peer AdaptabLe Topology for Ambient intelligence.","Managing the Evolution of Aspect-Oriented Software with Model-Based Pointcuts.","Mining Source Code for Structural Regularities.","Diagnosing and correcting design inconsistencies in source code with logical abduction.","Challenges in Software Evolution.","A Comparative Framework for Design Recovery Tools.","Mining Aspectual Views using Formal Concept Analysis.","Open Unification for Program Query Languages.","3rd International Workshop on Software Evolution Through Transformations: Embracing Change.","Identifying Refactoring Opportunities Using Logic Meta Programmin.","Object-Oriented Reengineering.","Preface.","High-level Transformations to Support Framework-Based Software Development.","Combining Software Descriptions.","Detecting and Resolving Model Inconsistencies Using Transformation Dependency Analysis.","Assessing the Evolvability of Software Architectures."],["Second International Workshop on Software Research and Climate Change.","Subjective-C - Bringing Context to Mobile Platform Programming.","Predicated Generic Functions.","Automated generation of program translation and verification tools using annotated grammars.","Enforcing Structural Regularities in Source Code using IntensiVE.","APPAREIL: A Tool for Building Automated Program Translators Using Annotated Grammars.","Academic Software Development Tools and Techniques.","Application-specific models and pointcuts using a logic metalanguage.","Context-Oriented Programming with the Ambient Object System.","Highly dynamic behaviour adaptability through prototypes with subjective multimethods.","A Unified Mechanism for Improving Advanced Transaction Management in Web Services.","A Survey of Automated Code-Level Aspect Mining Techniques.","IntensiVE  a toolsuite for documenting and checking structural source-code regularities.","Application-Specific Models and Pointcuts Using a Logic Meta Language.","Co-evolving code and design with intensional views: A case study.","Applying and combining three different aspect Mining Techniques.","Towards a Framework for Testing Structural Source-Code Regularities.","The Intensional View Environment.","Fifth International Workshop on Object-Oriented Reengineering.","Supporting software development through declaratively codified programming patterns.","Supporting Software Development through Declaratively Codified Programming.","Managing Unanticipated Evolution of Software Architectures.","Managing Software Evolution through Reuse Contracts.","Aspect-Oriented Programming Workshop Report.","Reuse Contracts: Managing the Evolution of Reusable Assets.","OPUS: a Formal Approach to Object-Orientation.","OPUS: A Calculus for Modelling Object-Oriented Concepts.","Encapsulation and composition as orthogonal operators on mixins: a solution to multiple inheritance problems.","Preface of the Proceedings of the Third International ERCIM Symposium on Software Evolution - EVOL 2007.","Applying and Combining Three Different Aspect Mining Techniques","Towards Automating Source-Consistent UML Refactorings.","Managing Unanticipated Evolution of Software Architectures.","Supporting Model Refactorings Through Behaviour Inheritance Consistencies.","Guest Editors Introduction: Software Evolution.","OPUS: a Formal Approach to Object-Orientation.","Pitfalls in Aspect Mining.","Software Evolution","Declaratively Codifying Software Architectures Using Virtual Software Classifications."],["Maintaining Consistency between UML Models Using Description Logic.","Knowledge-Based Object-Oriented Software Engineering."],["Delving source code with formal concept analysis."],["Incremental Detection of Model Inconsistencies Based on Model Operations."],["Introduction and Roadmap: History and Challenges of Software Evolution."],["Maintaining software through intentional source-code views."],["Workshop Report - ECOOP98 Workshop 7: Tools and Environments for Business Rules."],["Data-Intensive System Evolution.","Workshop on Software Evolution through Transformations: Towards Uniform Support throughout the Software Life-Cycle."],["Building Composable Aspect-Specific Languages with Logic Metaprogramming.","Formalising Behaviour Preserving Program Transformations."],["The evolution of Eclipse.","Some Challenges of Feature-based Merging of Class Diagrams."],["A Self-Adaptable Network Topology for Ambient Intelligence.","Automated Support for Framework-Based Software Evolution."],["Declarative Meta Programming to Support Software Development: Workshop Report.","A Survey of Software Refactoring.","A Qualitative Comparison of Three Aspect Mining Techniques."],["Automated Derivation of Translators From Annotated Grammars.","Model-driven Software Refactoring."],["Using Intentional Source-Code Views to Aid Software Maintenance."],["Towards a taxonomy of software change."],["Guest editors introduction to the 3rd issue of Experimental Software and Toolkits (EST): A special issue on Academic Software Development Tools and Techniques (WASDeTT 2008)."],["Tool Building on the Shoulders of Others."],["Challenges in Model-Driven Software Engineering."],["Assessing the Kodkod Model Finder for Resolving Model Inconsistencies."],["Workshop on Graph-Based Tools."]]