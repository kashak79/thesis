[["15th European Conference on Software Maintenance and Reengineering  CSMR 2011  1-4 March 2011  Oldenburg  Germany","QUALGEN: Modeling and Analysing the Quality of Evolving Software Systems.","Assessing the Kodkod Model Finder for Resolving Model Inconsistencies.","A framework for analysing and visualising open source software ecosystems.","Evolving Software Architecture Descriptions of Critical Systems.","Data-Intensive System Evolution.","Guest Editors Introduction: Software Evolution.","A case study to evaluate the suitability of graph transformation tools for program refactoring.","Amélioration de la qualité de modèles. Une étude de deux approches complémentaires.","Incremental Detection of Model Inconsistencies Based on Model Operations.","CSMR 2009 European Projects Track.","What Does It Take to Develop a Million Lines of Open Source Code?.","Some Challenges of Feature-based Merging of Class Diagrams.","Software Evolution","Challenges in Model-Driven Software Engineering.","Ontology Evolution.","Introduction and Roadmap: History and Challenges of Software Evolution.","Evolution Issues in Aspect-Oriented Programming.","Using Graph Transformation to Support Collaborative Ontology Evolution.","Generation of Sierpinski Triangles: A Case Study for Graph Transformation Tools.","Model-driven Software Refactoring.","Preface of the Proceedings of the Third International ERCIM Symposium on Software Evolution - EVOL 2007.","Analysing refactoring dependencies using graph transformation.","Evolution dArchitectures à base de Composants par Transformation de Graphes.","Does God Class Decomposition Affect Comprehensibility?","3rd International Workshop on Software Evolution Through Transformations: Embracing Change.","Transformation dependency analysis - a comparison of two approaches.","Detecting and Resolving Model Inconsistencies Using Transformation Dependency Analysis.","Incremental Resolution of Model Inconsistencies.","A Taxonomy of Model Transformation.","Applying a Model Transformation Taxonomy to Graph Transformation Technology.","On the Use of Graph Transformations for Model Refactoring.","The LAN-simulation: A Refactoring Teaching Example.","Essentials of the 4th UML/MoDELS Workshop in Software Model Engineering (WiSME2005).","Detecting Structural Refactoring Conflicts Using Critical Pair Analysis.","On the Evolution Complexity of Design Patterns.","Formalizing refactorings with graph transformations.","Towards a taxonomy of software change.","Workshop on Graph-Based Tools.","Workshop on Software Evolution Through Transformations: Model-Based vs. Implementation-Level Solutions.","Language-independent detection of object-oriented design patterns.","Analyzing the Evolution of Large-Scale Software.","Identifying Refactoring Opportunities Using Logic Meta Programmin.","Detecting Inconsistencies between UML Models Using Description Logic.","High-Speed Migration by Anticipative Mobility.","Using Genetic Programming to Generate Protocol Adaptors for Interprocess Communication.","Automated Support for Framework-Based Software Evolution.","Beyond the Refactoring Browser: Advanced Tool Support for Software Refactoring.","Reducing Network Latency by Application Streaming.","Using Description Logic to Maintain Consistency between UML Models.","Declarative Meta Programming to Support Software Development: Workshop Report.","High-level Transformations to Support Framework-Based Software Development.","Case Study: Simulation of a LAN.","Refactoring: Current Research and Future Trends.","Unanticipated Software Evolution.","Workshop on Graph-Based Tools.","Analysing Object-Oriented Application Frameworks Using Concept Analysis.","Graph-Based Tools (GraBaTs 2002).","A Graph-Based Metamodel for Object-Oriented Software Metrics.","A State-of-the-Art Survey on Software Merging.","4th Workshop on Object-Oriented Architectural Evolution.","A Declarative Evolution Framework for Object-Oriented Design Patterns.","Conditional Graph Rewriting as a Domain-Independent Formalism for Software Evolution.","Is It Possible to Express a Semantics of UML in UML? (The Meta-modelling Approach).","Managing Unanticipated Evolution of Software Architectures.","Assessing the Evolvability of Software Architectures.","Supporting Disciplined Reuse and Evolution of UML Models.","Combining Software Descriptions.","Abstract Semantics for ESM Systems.","Encapsulation and composition as orthogonal operators on mixins: a solution to multiple inheritance problems.","OPUS: a Formal Approach to Object-Orientation.","OPUS: A Calculus for Modelling Object-Oriented Concepts.","Applying and Combining Three Different Aspect Mining Techniques","Formalising Behaviour Preserving Program Transformations.","Separation of concerns for software evolution.","Application-specific models and pointcuts using a logic metalanguage.","Academic Software Development Tools and Techniques."],["Diagnosing and correcting design inconsistencies in source code with logical abduction.","Second International Workshop on Software Research and Climate Change.","Mining Source Code for Structural Regularities.","Automated generation of program translation and verification tools using annotated grammars.","Guest editors introduction to the 3rd issue of Experimental Software and Toolkits (EST): A special issue on Academic Software Development Tools and Techniques (WASDeTT 2008).","Tool Building on the Shoulders of Others.","Enforcing Structural Regularities in Source Code using IntensiVE.","A Self-Adaptable Network Topology for Ambient Intelligence.","Context-Oriented Programming with the Ambient Object System.","Highly dynamic behaviour adaptability through prototypes with subjective multimethods.","Object-Oriented Reengineering.","A Unified Mechanism for Improving Advanced Transaction Management in Web Services.","Open Unification for Program Query Languages.","Preface of the Proceedings of the Third International ERCIM Symposium on Software Evolution - EVOL 2007.","A Survey of Automated Code-Level Aspect Mining Techniques.","A Comparative Framework for Design Recovery Tools.","IntensiVE  a toolsuite for documenting and checking structural source-code regularities.","Object-Oriented Reengineering.","Co-evolving code and design with intensional views: A case study.","Automated Derivation of Translators From Annotated Grammars.","Applying and combining three different aspect Mining Techniques.","The Intensional View Environment.","A Qualitative Comparison of Three Aspect Mining Techniques.","Delving source code with formal concept analysis.","Fifth International Workshop on Object-Oriented Reengineering.","Object-Oriented Reengineering.","Using Intentional Source-Code Views to Aid Software Maintenance.","Declarative Meta Programming to Support Software Development: Workshop Report.","Knowledge-Based Object-Oriented Software Engineering.","Building Composable Aspect-Specific Languages with Logic Metaprogramming.","Maintaining software through intentional source-code views.","Supporting software development through declaratively codified programming patterns.","Managing Unanticipated Evolution of Software Architectures.","Declaratively Codifying Software Architectures Using Virtual Software Classifications.","Assessing the Evolvability of Software Architectures.","Managing Software Evolution through Reuse Contracts.","Combining Software Descriptions.","Pitfalls in Aspect Mining.","Fine-Grained Interlaced Code Loading for Mobile Systems.","Supporting Software Development through Declaratively Codified Programming.","OPUS: a Formal Approach to Object-Orientation.","Supporting Model Refactorings Through Behaviour Inheritance Consistencies.","A formal approach to model refactoring and model refinement.","Aspect-Oriented Programming Workshop Report."],["OPUS: A Calculus for Modelling Object-Oriented Concepts.","Application-Specific Models and Pointcuts Using a Logic Meta Language."],["Averting the Next Software Crisis.","PALTA: Peer-to-peer AdaptabLe Topology for Ambient intelligence.","APPAREIL: A Tool for Building Automated Program Translators Using Annotated Grammars.","A Survey of Software Refactoring.","Maintaining software through intentional source-code views."],["Maintaining Consistency between UML Models Using Description Logic."],["Detecting model inconsistency through operation-based model construction."],["Mining Aspectual Views using Formal Concept Analysis.","Automating Support for Software Evolution in UML."],["Towards Automating Source-Consistent UML Refactorings."],["Subjective-C - Bringing Context to Mobile Platform Programming."],["04101 Discussion - A Taxonomy of Model Transformations.","Workshop Report - ECOOP98 Workshop 7: Tools and Environments for Business Rules."],["Managing the Evolution of Aspect-Oriented Software with Model-Based Pointcuts.","Workshop on Software Evolution through Transformations: Towards Uniform Support throughout the Software Life-Cycle.","A Formal Foundation for Object-Oriented Software Evolution.","Refactoring of UML models using AGG."],["Preface.","Towards a Framework for Testing Structural Source-Code Regularities."],["Software Evolution through Transformations."],["Reuse Contracts: Managing the Evolution of Reusable Assets.","Predicated Generic Functions."],["The evolution of Eclipse."],["Guiding Architectural Restructuring through Architectural Styles."],["Challenges in Software Evolution."],["Specifying Domain-Specific Refactorings for AndroMDA Based on Graph Transformation."]]