Self Adaptation of Mutation Rates in a Steady State Genetic Algorithm
Jim Smith
Faculty of Computer Studies & Mathematics University of West of England Bristol Bs16 1QY, U.K. jim@btc.uwe.ac.uk

T.C.Fogarty
Faculty of Computer Studies & Mathematics University of West of England Bristol Bs16 1QY, U.K. tcf@btc.uwe.ac.uk the representation of each solution. This approach also means that the mutation rate is now governed by a distributed rather than a global rule (see [Hoffmeister & Bäck, 1991] for a good overview of the issues tackled and approaches taken). These ideas have been applied to a generational GA by adding a further 20 bits to the problem genotype, which were used to encode for the mutation rate [Bäck 1991]. The results showed that in a generational setting the mechanism proved competitive with a genetic algorithm using a ﬁxed (optimal) mutation rate provided that a high selection pressure was maintained (this is referred to as “extinctive” selection). In this paper an investigation is made of the issues confronted when this paradigm is implemented within the setting of a “steady state” genetic algorithm [Whitley & Kauth1988] where the methods used in Evolutionary Strategies for managing the population are not suitable. The class of landscapes chosen to investigate the behaviour of the algorithm is the well-studied NK family of landscapes which provide a tunable set of landscapes with increasing numbers of optima and decreasing ﬁtness correlations as K is increased. The reader is referred to [Kauffman 1993] for a full description. Since these landscapes are randomly created, the ﬁtness of the global optimum of each landscape is not known, and so the measure chosen to study the performance of the algorithm in various ﬂavours is the current best in a population averaged over a number of runs (each with a different landscape).

1: Abstract
This paper investigates the use of genetically encoded mutation rates within a “steady state” genetic algorithm in order to provide a self-adapting mutation mechanism for incremental evolution. One of the outcomes of this work will be a reduction in the number of parameters required to be set by the operator, thus facilitating the transfer of evolutionary computing techniques into an industrial setting. The NK family of landscapes is used to provide a variety of different problems with known statistical features in order to examine the effects of changing various parameters on the performance of the search. A number of policies are considered for the replacement of members of the population with newly created individuals and recombination of material between parents, and a number of methods of encoding for mutation rate are investigated. Empirical comparisons (using the “best-of current-population” metric) over a range of test problems show that a genetic algorithm incorporating the best “ﬂavour” of the adaptive mutation operator outperformed the same algorithm when using any one of a variety of “standard” ﬁxed mutation rates suggested by other authors.

2: Introduction
Mutation has long been regarded as a vital ingredient in evolutionary algorithms, and some paradigms e.g. Evolutionary Strategies [Rechenberg 1973], [Schwefel 1981] use it as their principal search mechanism. Within the ﬁeld of Genetic Algorithms (GA’s) [Holland 1975] there has been much work, both practical e.g. [Schaffer et al. 1989] and theoretical e.g. [Spears 1992] on the relative merits of mutation as a search mechanism. Much of the work has been concerned with ﬁnding suitable values for the rate of mutation to apply as a global constant during the search. There is, however, an increasing body of evidence, both empirical e.g. [Fogarty 1989] for learning control rules, and theoretical e.g. [Bäck 1992] that the optimal rate of mutation is not only different for every problem encoding but will vary with evolutionary time according to the state of the search and the nature of the landscape being searched. This issue has been tackled successfully within Evolutionary Strategies by encoding the mutation step applied within

3: Implementation Details
The steady state genetic algorithm is different to the generational models used in the work discussed above in that there is typically a single new member inserted to the population at any one time, which according to the standard nomenclature would correspond to a (µ+1) strategy. However it has been shown empirically (and theoretically for certain simple problems [Schwefel 1981]) that there is an optimal “acceptance” ratio of approximately 1:5. i.e. one individual should be incorporated into the population for every ﬁve created. This can be explained by considering that although repeated mutation of a single individual corresponds to a form of local search, which can be shown to enhance the performance of Genetic Algorithms e.g. [Bull & Fogarty 1994], there is a trade off between this local search and global search (either via recombination or simply by considering other members of

